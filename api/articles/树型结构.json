{"title":"树型结构","uid":"f2f9e3dbcdd8dee08b2c8bdbc160f6ea","slug":"树型结构","date":"2022-08-10T02:33:42.000Z","updated":"2023-03-15T05:11:52.124Z","comments":true,"path":"api/articles/树型结构.json","keywords":null,"cover":"../images/java.png","content":"<h1 id=\"树型结构\"><a href=\"#树型结构\" class=\"headerlink\" title=\"树型结构\"></a>树型结构</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;**\n\n * 获取组织机构树\n\n *\n\n * @author yuxuange\n\n * @Date 2021-02-03\n\n *&#x2F;\n\n@Component\n\npublic class TreeUtil &#123;\n\n    &#x2F;**\n\n     * 组织机构表，根节点CODE\n\n     *&#x2F;\n\n    private static final String TREE_ROOT_CODE &#x3D; &quot;0&quot;;\n\n &#x2F;**\n\n  * 标准版\n\n  *&#x2F;\n\n    public static List&lt;TreeVO&gt; getTree(List&lt;SysDept&gt; record) &#123;\n\n        List&lt;TreeVO&gt; treeList &#x3D; new LinkedList();\n\n        for (SysDept sysDept : record) &#123;\n\n            if (TREE_ROOT_CODE.equals(sysDept.getParentId())) &#123;\n\n                TreeVO treeVO &#x3D; new TreeVO();\n\n                treeVO.setId(sysDept.getCode());\n\n                treeVO.setTitle(sysDept.getName());\n\n                treeVO.setChildren(getChild(sysDept.getCode(), record));\n\n                treeList.add(treeVO);\n\n            &#125;\n\n        &#125;\n\n        return treeList;\n\n    &#125;\n\n    private static List&lt;TreeVO&gt; getChild(String code, List&lt;SysDept&gt; record) &#123;\n\n        List&lt;TreeVO&gt; childrenList &#x3D; new LinkedList();\n\n        for (SysDept sysDept : record) &#123;\n\n            if (code.equals(sysDept.getParentId())) &#123;\n\n                TreeVO treeVO &#x3D; new TreeVO();\n\n                treeVO.setId(sysDept.getCode());\n\n                treeVO.setTitle(sysDept.getName());\n\n                treeVO.setChildren(getChild(sysDept.getCode(), record));\n\n                childrenList.add(treeVO);\n\n            &#125;\n\n        &#125;\n\n        return childrenList;\n\n    &#125;\n\n &#x2F;**\n\n  * lamda表达式版\n\n  *&#x2F;\n\n    public static List&lt;TreeVO&gt; getTreeEX(List&lt;SysDept&gt; record)&#123;\n\n        return record.stream().filter(sysDept -&gt; &#123;return TREE_ROOT_CODE.equals(sysDept.getParentId());&#125;).map(sysDept -&gt; &#123;\n\n            TreeVO treeVO &#x3D; new TreeVO();\n\n            treeVO.setId(sysDept.getCode());\n\n            treeVO.setTitle(sysDept.getName());\n\n            treeVO.setChildren(getChildEX(sysDept.getCode(),record));\n\n            return treeVO;\n\n        &#125;).collect(Collectors.toList());\n\n    &#125;\n\n    private static List&lt;TreeVO&gt; getChildEX(String code,List&lt;SysDept&gt; record)&#123;\n\n        return record.stream().filter(sysDept -&gt; &#123;return code.equals(sysDept.getParentId());&#125;).map(sysDept -&gt; &#123;\n\n            TreeVO treeVO &#x3D; new TreeVO();\n\n            treeVO.setId(sysDept.getCode());\n\n            treeVO.setTitle(sysDept.getName());\n\n            treeVO.setChildren(getChildEX(sysDept.getCode(),record));\n\n            return treeVO;\n\n        &#125;).collect(Collectors.toList());\n\n    &#125;\n\n&#125;\n</code></pre>\n\n<p><a href=\"https://blog.csdn.net/weixin_43845597/article/details/113767225\">csdn原文</a></p>\n","text":"树型结构&#x2F;** * 获取组织机构树 * * @author yuxuange * @Date 2021-02-03 *&#x2F; @Component public class TreeUtil &#123; &#x2F;** * 组织机构表，根节点CODE *&#x...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"Java","slug":"Java","count":7,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A0%91%E5%9E%8B%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">树型结构</span></a></li></ol>","author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}},"mapped":true,"prev_post":{"title":"Java8-17 新特性（一）","uid":"a4afb430c2cbd3b47233ae51001f2621","slug":"Java8-17 新特性（一）","date":"2023-02-17T07:33:42.000Z","updated":"2023-03-15T03:55:23.647Z","comments":true,"path":"api/articles/Java8-17 新特性（一）.json","keywords":null,"cover":"../images/java.png","text":"Java8-17 新特性（一）Java81. 接口默认方法和静态方法 1.1 默认方法默认方法需要用新的关键字default来定义。默认方法可以通过实现类的实例进行访问，并且可以被重写。 public interface UserDao &#123; default Option...","link":"","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"Java","slug":"Java","count":7,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}}},"next_post":{"title":"Java创建List的四种方法","uid":"6543d025a348af299ba6e8174ff95a54","slug":"Java创建List的四种方法","date":"2022-06-22T02:03:42.000Z","updated":"2023-03-15T05:12:26.166Z","comments":true,"path":"api/articles/Java创建List的四种方法.json","keywords":null,"cover":"../images/java.png","text":"Java创建List常用几种方式1、常规操作 new ArrayList&lt;&gt;() 创建 List&lt;Integer&gt; list &#x3D; new ArrayList&lt;&gt;(); list.add(1); list.add(2); list.ad...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Java","slug":"Java","count":7,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":7,"path":"api/tags/Java.json"}],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}}}}