{"title":"vue 图片预览组件 v-viewer","uid":"b5984abe1cd42992458002641ebaf9e8","slug":"vue-图片预览组件-v-viewer","date":"2023-03-20T05:58:25.000Z","updated":"2023-03-20T07:04:34.659Z","comments":true,"path":"api/articles/vue-图片预览组件-v-viewer.json","keywords":null,"cover":null,"content":"<h1 id=\"vue-图片预览组件-v-viewer\"><a href=\"#vue-图片预览组件-v-viewer\" class=\"headerlink\" title=\"vue 图片预览组件 v-viewer\"></a>vue 图片预览组件 v-viewer</h1><h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install v-viewer --save</code></pre>\n<h2 id=\"在main-js添加\"><a href=\"#在main-js添加\" class=\"headerlink\" title=\"在main.js添加\"></a>在main.js添加</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">import Viewer from &#39;v-viewer&#39;\nimport &#39;viewerjs&#x2F;dist&#x2F;viewer.css&#39;\nVue.use(Viewer)</code></pre>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>引入v-viewer及必需的css样式，并使用Vue.use()注册插件，之后即可使用。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;!-- directive --&gt;\n    &lt;div class&#x3D;&quot;images&quot; v-viewer&gt;\n      &lt;img v-for&#x3D;&quot;src in images&quot; :key&#x3D;&quot;src&quot; :src&#x3D;&quot;src&quot;&gt;\n    &lt;&#x2F;div&gt;\n    &lt;!-- component --&gt;\n    &lt;viewer :images&#x3D;&quot;images&quot;&gt;\n      &lt;img v-for&#x3D;&quot;src in images&quot; :key&#x3D;&quot;src&quot; :src&#x3D;&quot;src&quot;&gt;\n    &lt;&#x2F;viewer&gt;\n    &lt;!-- api --&gt;\n    &lt;button type&#x3D;&quot;button&quot; @click&#x3D;&quot;show&quot;&gt;Click to show&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n&lt;script&gt;\n  import &#39;viewerjs&#x2F;dist&#x2F;viewer.css&#39;\n  import VueViewer from &#39;v-viewer&#39;\n  import Vue from &#39;vue&#39;\n  Vue.use(VueViewer)\n  export default &#123;\n    data() &#123;\n      return &#123;\n        images: [\n          &quot;https:&#x2F;&#x2F;picsum.photos&#x2F;200&#x2F;200&quot;,\n          &quot;https:&#x2F;&#x2F;picsum.photos&#x2F;300&#x2F;200&quot;,\n          &quot;https:&#x2F;&#x2F;picsum.photos&#x2F;250&#x2F;200&quot;\n        ]\n      &#125;;\n    &#125;,\n    methods: &#123;\n      show() &#123;\n        this.$viewerApi(&#123;\n          images: this.images,\n        &#125;)\n      &#125;,\n    &#125;,\n  &#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h2 id=\"以api形式使用\"><a href=\"#以api形式使用\" class=\"headerlink\" title=\"以api形式使用\"></a>以api形式使用</h2><p>api形式只能使用modal模式。</p>\n<p>你可以直接执行函数: this.$viewerApi({options: {}, images: []}) 来展现画廊， 而不需要自己来渲染这些img元素.</p>\n<p>函数会返回对应的viewer实例.</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;button&quot; @click&#x3D;&quot;previewURL&quot;&gt;URL Array&lt;&#x2F;button&gt;\n    &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;button&quot; @click&#x3D;&quot;previewImgObject&quot;&gt;Img-Object Array&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n&lt;script&gt;\n  export default &#123;\n    data() &#123;\n      sourceImageURLs: [\n        &#39;https:&#x2F;&#x2F;picsum.photos&#x2F;200&#x2F;200?random&#x3D;1&#39;,\n        &#39;https:&#x2F;&#x2F;picsum.photos&#x2F;200&#x2F;200?random&#x3D;2&#39;,\n      ],\n      sourceImageObjects: [\n        &#123;\n          &#39;src&#39;:&#39;https:&#x2F;&#x2F;picsum.photos&#x2F;200&#x2F;200?random&#x3D;3&#39;,\n          &#39;data-source&#39;:&#39;https:&#x2F;&#x2F;picsum.photos&#x2F;800&#x2F;800?random&#x3D;3&#39;\n        &#125;,\n        &#123;\n          &#39;src&#39;:&#39;https:&#x2F;&#x2F;picsum.photos&#x2F;200&#x2F;200?random&#x3D;4&#39;,\n          &#39;data-source&#39;:&#39;https:&#x2F;&#x2F;picsum.photos&#x2F;800&#x2F;800?random&#x3D;4&#39;\n        &#125;\n      ]\n    &#125;,\n    methods: &#123;\n      previewURL () &#123;\n          &#x2F;&#x2F; 如果使用&#96;app.use&#96;进行全局安装, 你就可以像这样直接调用&#96;this.$viewerApi&#96;\n        const $viewer &#x3D; this.$viewerApi(&#123;\n          images: this.sourceImageURLs\n        &#125;)\n      &#125;,\n      previewImgObject () &#123;\n          &#x2F;&#x2F; 或者你可以单独引入api然后执行它\n        const $viewer &#x3D; viewerApi(&#123;\n          options: &#123;\n            toolbar: true,\n            url: &#39;data-source&#39;,\n            initialViewIndex: 1\n          &#125;,\n          images: this.sourceImageObjects\n        &#125;)\n      &#125;\n    &#125;\n  &#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://mirari.cc/v-viewer/\">展示页</a>            </li>\n<li><a href=\"https://mirari.cc/2017/08/27/Vue%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E7%BB%84%E4%BB%B6v-viewer%EF%BC%8C%E6%94%AF%E6%8C%81%E6%97%8B%E8%BD%AC%E3%80%81%E7%BC%A9%E6%94%BE%E3%80%81%E7%BF%BB%E8%BD%AC%E7%AD%89%E6%93%8D%E4%BD%9C/\">中文文档</a></li>\n<li><a href=\"https://github.com/mirari/v-viewer\">github</a></li>\n</ul>\n","text":"vue 图片预览组件 v-viewer安装依赖npm install v-viewer --save 在main.js添加import Viewer from &#39;v-viewer&#39; import &#39;viewerjs&#x2F;dist&#x2F;viewe...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"web","slug":"web","count":5,"path":"api/categories/web.json"}],"tags":[{"name":"web","slug":"web","count":5,"path":"api/tags/web.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#vue-%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88%E7%BB%84%E4%BB%B6-v-viewer\"><span class=\"toc-text\">vue 图片预览组件 v-viewer</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">安装依赖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8main-js%E6%B7%BB%E5%8A%A0\"><span class=\"toc-text\">在main.js添加</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A5api%E5%BD%A2%E5%BC%8F%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">以api形式使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol></li></ol>","author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}},"mapped":true,"prev_post":{"title":"mybatis实体类生成数据库","uid":"b9e36f1b31fdb7446c5124e8f6e853e3","slug":"mybatis实体类生成数据库","date":"2023-03-21T03:16:18.000Z","updated":"2023-03-21T06:47:41.029Z","comments":true,"path":"api/articles/mybatis实体类生成数据库.json","keywords":null,"cover":null,"text":"mybatis实体类生成数据库为什么要用？因为数据库忘记备份，时间久了数据库没了，所以研究了一下这个东西，感谢大佬开发的反向生成，详细连接地址在文末 JDKjdk版本1.7+ ACTable依赖&lt;dependency&gt; &lt;groupId&gt;com.gitee...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"Java","slug":"Java","count":9,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":10,"path":"api/tags/Java.json"}],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}}},"next_post":{"title":"Java File类","uid":"903c2b49181ed740deb9eac359f116c3","slug":"Java File类","date":"2023-03-18T01:30:47.000Z","updated":"2023-03-20T01:47:17.647Z","comments":true,"path":"api/articles/Java File类.json","keywords":null,"cover":null,"text":"Java中，File类是用于表示文件或目录的类，它提供了一些常用的属性和方法来操作文件或目录。以下是File类中常用的属性： 文件或目录的名称：可以通过 File.getName() 方法获取。 文件或目录的路径：可以通过 File.getPath() 方法获取。 文件或目录的绝...","link":"","photos":[],"count_time":{"symbolsCount":500,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}}}}