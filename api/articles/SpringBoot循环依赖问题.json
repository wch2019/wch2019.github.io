{"title":"SpringBoot循环依赖问题","uid":"fc8441281cafc01b53d6231870878c78","slug":"SpringBoot循环依赖问题","date":"2023-03-17T06:43:31.000Z","updated":"2023-03-20T01:47:17.648Z","comments":true,"path":"api/articles/SpringBoot循环依赖问题.json","keywords":null,"cover":"../images/springboot.jpg","content":"<h1 id=\"SpringBoot-循环依赖问题\"><a href=\"#SpringBoot-循环依赖问题\" class=\"headerlink\" title=\"SpringBoot 循环依赖问题\"></a>SpringBoot 循环依赖问题</h1><p>当你遇到这种情况时，就是循环依赖问题</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Description:\n\nThe dependencies of some of the beans in the application context form a cycle:\n\n   configController defined in file [E:\\project\\gitee\\xiaohai-blog\\xiaohai-system\\target\\classes\\com\\xiaohai\\system\\controller\\ConfigController.class]\n┌─────┐\n|  configServiceImpl defined in file [E:\\project\\gitee\\xiaohai-blog\\xiaohai-system\\target\\classes\\com\\xiaohai\\system\\service\\impl\\ConfigServiceImpl.class]\n↑     ↓\n|  emailServiceImpl defined in file [E:\\project\\gitee\\xiaohai-blog\\xiaohai-system\\target\\classes\\com\\xiaohai\\system\\service\\impl\\EmailServiceImpl.class]\n└─────┘\n</code></pre>\n<p>Java中的循环依赖问题指的是两个或多个类之间相互依赖，形成了一个环路，导致编译器无法确定某个类的具体实现。<br>例如，类A依赖于类B，而类B又依赖于类A，这样就形成了一个循环依赖。<br>这种问题通常会导致编译错误或运行时错误，因此需要避免出现循环依赖。以下是几种解决循环依赖问题的方法：</p>\n<ul>\n<li><p>重构代码：将相互依赖的类进行合理的划分和重构，消除循环依赖。</p>\n</li>\n<li><p>使用接口：将相互依赖的类抽象成接口，然后再进行依赖注入，这样可以避免循环依赖。</p>\n</li>\n<li><p>使用延迟加载：将依赖的类在需要使用时再进行加载，而不是在类初始化时就加载，这样可以避免循环依赖。</p>\n</li>\n<li><p>使用中介类：引入一个中介类，将相互依赖的类都注入到中介类中，然后再将中介类注入到需要使用的类中，这样可以避免循环依赖。</p>\n</li>\n</ul>\n<h2 id=\"Lazy注解\"><a href=\"#Lazy注解\" class=\"headerlink\" title=\"@Lazy注解\"></a>@Lazy注解</h2><p>   @Lazy注解可以延迟加载一个bean，即在需要使用该bean时才会被加载。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@Lazy\n@Autowired\nprivate  ConfigService configService;</code></pre>\n<p><strong>注意：</strong> 使用lombok提供的注解@RequiredArgsConstructor延迟加载会失效，取消final修饰用@Autowired</p>\n","text":"SpringBoot 循环依赖问题当你遇到这种情况时，就是循环依赖问题 Description: The dependencies of some of the beans in the application context form a cycle: configContro...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Java","slug":"Java","count":9,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":10,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SpringBoot-%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">SpringBoot 循环依赖问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lazy%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">@Lazy注解</span></a></li></ol></li></ol>","author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}},"mapped":true,"prev_post":{"title":"Java File类","uid":"903c2b49181ed740deb9eac359f116c3","slug":"Java File类","date":"2023-03-18T01:30:47.000Z","updated":"2023-03-20T01:47:17.647Z","comments":true,"path":"api/articles/Java File类.json","keywords":null,"cover":null,"text":"Java中，File类是用于表示文件或目录的类，它提供了一些常用的属性和方法来操作文件或目录。以下是File类中常用的属性： 文件或目录的名称：可以通过 File.getName() 方法获取。 文件或目录的路径：可以通过 File.getPath() 方法获取。 文件或目录的绝...","link":"","photos":[],"count_time":{"symbolsCount":500,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}}},"next_post":{"title":"hexo搭建","uid":"4d178542e742a642ab21284220759956","slug":"blog/hexo搭建/hexo搭建","date":"2023-03-16T01:43:19.000Z","updated":"2023-03-17T10:42:03.544Z","comments":true,"path":"api/articles/blog/hexo搭建/hexo搭建.json","keywords":null,"cover":"../../../images/blog/hexo搭建/hexo.png","text":"hexo搭建 什么是hexo？ Hexo是一个基于Node.js的静态博客生成器，可以将Markdown格式的文本转换成静态网页的形式。 它支持大量的主题和插件，可以方便地定制自己的博客主题和功能。 Hexo还支持多种发布方式， 包括将生成的静态网页部署到Github Pages...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"blog","slug":"blog","count":1,"path":"api/categories/blog.json"}],"tags":[{"name":"blog","slug":"blog","count":1,"path":"api/tags/blog.json"}],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/xiaohai-store","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2020"}}}}}}