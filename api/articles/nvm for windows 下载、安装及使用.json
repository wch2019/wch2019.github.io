{"title":"nvm for windows 下载、安装及使用","uid":"d459146c27d3881c39d30204014457f4","slug":"nvm for windows 下载、安装及使用","date":"2023-02-26T10:19:42.000Z","updated":"2023-03-16T07:30:46.435Z","comments":true,"path":"api/articles/nvm for windows 下载、安装及使用.json","keywords":null,"cover":"../images/nodejs.png","content":"<h1 id=\"nvm-for-windows-下载、安装及使用\"><a href=\"#nvm-for-windows-下载、安装及使用\" class=\"headerlink\" title=\"nvm for windows 下载、安装及使用\"></a>nvm for windows 下载、安装及使用</h1><p><img src=\"/../images/nodejs.png\" alt=\"nvm for windows 下载、安装及使用\"></p>\n<p>nvm是node版本管理工具，可以运行在多种操作系统上。这里主要记录一下在windows系统的安装和使用。</p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p><strong>NVM for Windows 下载地址：</strong><a href=\"https://link.juejin.cn/?target=https://github.com/coreybutler/nvm-windows/releases\"> </a><a href=\"https://link.juejin.cn/?target=https://github.com/coreybutler/nvm-windows/releases\">github.com&#x2F;coreybutler…</a></p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8638304f2c654bd09d203d874b32af41~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp\" alt=\"image.png\"> 只需点击第三个，下载安装包，下载之后点击安装，无需配置就可以使用，十分方便。</p>\n<p>简单说明：</p>\n<ul>\n<li>nvm-noinstall.zip： 这个是绿色免安装版本，但是使用之前需要配置</li>\n<li>nvm-setup.zip：这是一个安装包，下载之后点击安装，无需配置就可以使用，方便。</li>\n<li>Source code(zip)：zip压缩的源码</li>\n<li>Sourc code(tar.gz)：tar.gz的源码，一般用于*nix系统</li>\n</ul>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ul>\n<li>第一安装目录：这里没有使用默认的安装目录，修改安装目录为 D:\\nvm\\ ；读者可自行决定安装目录</li>\n<li>第二安装目录：添加 node.js 的安装目录 这里用 “添加 node.js 的安装目录” 的说法其实不太准确，准确的说法应该是配置 node.js 的安装目录；默认会使用 C:\\Program Files\\nodejs 目录，C:\\Program Files\\nodejs 目录也是 node.js 默认的安装目录；如果读者在安装 nvm 前就已经安装了 node.js，且修改了 node.js 的安装目录，那么此处的目录要修改为 node.js 的安装目录；如果读者在安装 nvm 前没有安装 node.js，那么此处的目录可自行定义</li>\n<li>第三点击安装，在安装过程中会弹出：由于已经安装了 node，所以此时提示“你希望nvm管理已经安装的 node 版本吗”，点击 是待安装完成后测试是否安装成功</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nvm -v\n复制代码</code></pre>\n\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ab1c04ff21645db99ffda93aedb521d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp\" alt=\"image.png\"></p>\n<h3 id=\"命令使用\"><a href=\"#命令使用\" class=\"headerlink\" title=\"命令使用\"></a>命令使用</h3><p>nvm for windows是一个命令行工具，在控制台输入nvm,就可以看到它的命令用法。基本命令有：</p>\n<ul>\n<li>nvm arch [32|64] ： 显示node是运行在32位还是64位模式。指定32或64来覆盖默认体系结构。</li>\n<li>nvm install  [arch]： 该可以是node.js版本或最新稳定版本latest。（可选[arch]）指定安装32位或64位版本（默认为系统arch）。设置[arch]为all以安装32和64位版本。在命令后面添加–insecure ，可以绕过远端下载服务器的SSL验证。</li>\n<li>nvm list [available]： 列出已经安装的node.js版本。可选的available，显示可下载版本的部分列表。这个命令可以简写为nvm ls [available]。</li>\n<li>nvm on： 启用node.js版本管理。</li>\n<li>nvm off： 禁用node.js版本管理(不卸载任何东西)</li>\n<li>nvm proxy [url]： 设置用于下载的代理。留[url]空白，以查看当前的代理。设置[url]为none删除代理。</li>\n<li>nvm node_mirror [url]：设置node镜像，默认为<a href=\"https://link.juejin.cn/?target=https://nodejs.org/dist/.%E3%80%82%E5%BB%BA%E8%AE%AE%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%B7%98%E5%AE%9D%E7%9A%84%E9%95%9C%E5%83%8Fhttps://npm.taobao.org/mirrors/node/\">nodejs.org&#x2F;dist&#x2F;.。建议设置…</a></li>\n<li>nvm npm_mirror [url]：设置npm镜像，默认为<a href=\"https://link.juejin.cn/?target=https://github.com/npm/npm/archive/%E3%80%82%E5%BB%BA%E8%AE%AE%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%B7%98%E5%AE%9D%E7%9A%84%E9%95%9C%E5%83%8Fhttps://npm.taobao.org/mirrors/npm/\">github.com&#x2F;npm&#x2F;npm&#x2F;arc…</a></li>\n<li>nvm uninstall ： 卸载指定版本的nodejs。</li>\n<li>nvm use [version] [arch]： 切换到使用指定的nodejs版本。可以指定32&#x2F;64位[arch]。nvm use 将继续使用所选版本，但根据提供的值切换到32&#x2F;64位模式的</li>\n<li>nvm root [path]： 设置 nvm 存储node.js不同版本的目录 ,如果未设置，将使用当前目录。</li>\n<li>nvm version： 显示当前运行的nvm版本，可以简写为nvm v 常用命令：</li>\n<li>nvm ls 查看已经安装的所有nodejs版本\\</li>\n<li>nvm install 版本号，可安装指定版本的nodejs\\</li>\n<li>nvm use 版本号，即可切换到指定版本\\</li>\n<li>nvm uninstall 版本号，卸载指定版本</li>\n</ul>\n<p><strong>注意：在使用nvm-window 时得环境变量的配置，尤其Path 是否正确。</strong></p>\n<p>作者：沐溪兮<br>链接：<a href=\"https://juejin.cn/post/7074108351524634655\">https://juejin.cn/post/7074108351524634655</a></p>\n","text":"nvm for windows 下载、安装及使用 nvm是node版本管理工具，可以运行在多种操作系统上。这里主要记录一下在windows系统的安装和使用。 下载NVM for Windows 下载地址： github.com&#x2F;coreybutler… 只需点击第三个，...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"web","slug":"web","count":6,"path":"api/categories/web.json"}],"tags":[{"name":"web","slug":"web","count":6,"path":"api/tags/web.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#nvm-for-windows-%E4%B8%8B%E8%BD%BD%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">nvm for windows 下载、安装及使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">命令使用</span></a></li></ol></li></ol></li></ol>","author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/wch2019","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2019"}}}},"mapped":true,"prev_post":{"title":"OpenAPI规范和SpringDoc使用","uid":"44f3816acae6092110e3c35d6f574b7f","slug":"OpenAPI规范和SpringDoc使用","date":"2023-03-10T03:33:42.000Z","updated":"2023-03-24T05:39:07.899Z","comments":true,"path":"api/articles/OpenAPI规范和SpringDoc使用.json","keywords":null,"cover":"../svg/OpenApi3.svg","text":"OpenAPI规范和SpringDoc使用 1. 简介OpenAPI规范(OAS)，以前称为Swagger 规范，是一种机器可读的接口定义语言的规范，用于描述、生成、使用和可视化RESTful Web 服务。它以前是Swagger框架的一部分，在 2016 年成为一个单独的项目，...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"21 mins."},"categories":[{"name":"Java","slug":"Java","count":9,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":10,"path":"api/tags/Java.json"}],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/wch2019","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2019"}}}}},"next_post":{"title":"Java8-17 新特性（二）","uid":"cfd6516cec60dd52fbe0026aa3ac0713","slug":"Java8-17 新特性（二）","date":"2023-02-17T08:33:42.000Z","updated":"2023-03-15T03:55:43.663Z","comments":true,"path":"api/articles/Java8-17 新特性（二）.json","keywords":null,"cover":"../images/java.png","text":"Java8-17 新特性（二）Java91. Java平台模块系统(JPMS)1.1 模块 模块是一个命名的、自描述的代码和数据集合(A module is a named, self-describing collection of code and data.)。它是一组包含...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"Java","slug":"Java","count":9,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":10,"path":"api/tags/Java.json"}],"author":{"name":"小海","slug":"blog-author","avatar":"/avatar/avatar.jpg","link":"/","description":"用一点点代码,改变生活","socials":{"github":"https://github.com/wch2019","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_27873145","juejin":"","customs":{"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/wch2019"}}}}}}